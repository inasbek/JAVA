memberSearchIndex = [{"p":"strategy","c":"SelectionStrategy","l":"addCompetitorsUntilPowerOf2(List<Competitor>, int, List<Map<Competitor, Integer>>, List<League>)","u":"addCompetitorsUntilPowerOf2(java.util.List,int,java.util.List,java.util.List)"},{"p":"competition","c":"Competitor","l":"addPoints(int)"},{"p":"observer","c":"Bookmakers","l":"augmenterCote(Competitor)","u":"augmenterCote(competition.Competitor)"},{"p":"observer","c":"Bookmakers","l":"Bookmakers(int)","u":"%3Cinit%3E(int)"},{"p":"competition","c":"Competition","l":"Competition(List<Competitor>, Match)","u":"%3Cinit%3E(java.util.List,match.Match)"},{"p":"competition","c":"CompetitionMain","l":"CompetitionMain()","u":"%3Cinit%3E()"},{"p":"competition","c":"Competitor","l":"Competitor(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"competition","c":"Competitor","l":"Competitor(String, int)","u":"%3Cinit%3E(java.lang.String,int)"},{"p":"competition","c":"Competition","l":"competitors"},{"p":"strategy","c":"SelectionStrategy","l":"competitorsAtNthPosition(List<Map<Competitor, Integer>>, int)","u":"competitorsAtNthPosition(java.util.List,int)"},{"p":"strategy","c":"SelectFirstInLeagues","l":"competitorsForTournament(List<League>)","u":"competitorsForTournament(java.util.List)"},{"p":"strategy","c":"SelectFstSndInLeagues","l":"competitorsForTournament(List<League>)","u":"competitorsForTournament(java.util.List)"},{"p":"strategy","c":"SelectLastInLeagues","l":"competitorsForTournament(List<League>)","u":"competitorsForTournament(java.util.List)"},{"p":"strategy","c":"SelectionStrategy","l":"competitorsForTournament(List<League>)","u":"competitorsForTournament(java.util.List)"},{"p":"match","c":"Match","l":"consequence(Competitor, Competitor)","u":"consequence(competition.Competitor,competition.Competitor)"},{"p":"match","c":"MockMatch","l":"consequence(Competitor, Competitor)","u":"consequence(competition.Competitor,competition.Competitor)"},{"p":"match","c":"RandomMatch","l":"consequence(Competitor, Competitor)","u":"consequence(competition.Competitor,competition.Competitor)"},{"p":"observer","c":"Bookmakers","l":"dimunierCote(Competitor)","u":"dimunierCote(competition.Competitor)"},{"p":"match","c":"Match","l":"displayCompetitors(Competitor, Competitor)","u":"displayCompetitors(competition.Competitor,competition.Competitor)"},{"p":"match","c":"Match","l":"displayWinner(Competitor)","u":"displayWinner(competition.Competitor)"},{"p":"competition","c":"Competitor","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"competition","c":"Competition","l":"estPuissanceDe2(long)"},{"p":"strategy","c":"SelectionStrategy","l":"extracRankings(List<League>)","u":"extracRankings(java.util.List)"},{"p":"observer","c":"Bookmakers","l":"getCote(Competitor)","u":"getCote(competition.Competitor)"},{"p":"competition","c":"Competition","l":"getMatch()"},{"p":"competition","c":"Competitor","l":"getName()"},{"p":"type","c":"Master","l":"getNbLeagues()"},{"p":"competition","c":"Competition","l":"getObserveurs()"},{"p":"match","c":"Match","l":"getObserveurs()"},{"p":"competition","c":"Competitor","l":"getPoints()"},{"p":"observer","c":"Journalist","l":"Journalist()","u":"%3Cinit%3E()"},{"p":"type","c":"League","l":"League(List<Competitor>, Match)","u":"%3Cinit%3E(java.util.List,match.Match)"},{"p":"competition","c":"CompetitionMain","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"util","c":"MapUtil","l":"MapUtil()","u":"%3Cinit%3E()"},{"p":"type","c":"Master","l":"Master(List<Competitor>, Match, SelectionStrategy, int)","u":"%3Cinit%3E(java.util.List,match.Match,strategy.SelectionStrategy,int)"},{"p":"match","c":"Match","l":"Match()","u":"%3Cinit%3E()"},{"p":"match","c":"MockMatch","l":"MockMatch()","u":"%3Cinit%3E()"},{"p":"match","c":"Match","l":"observeurs"},{"p":"competition","c":"Competition","l":"play()"},{"p":"match","c":"Match","l":"play(Competitor, Competitor)","u":"play(competition.Competitor,competition.Competitor)"},{"p":"competition","c":"Competition","l":"play(List<Competitor>)","u":"play(java.util.List)"},{"p":"type","c":"League","l":"play(List<Competitor>)","u":"play(java.util.List)"},{"p":"type","c":"Master","l":"play(List<Competitor>)","u":"play(java.util.List)"},{"p":"type","c":"Tournament","l":"play(List<Competitor>)","u":"play(java.util.List)"},{"p":"competition","c":"Competition","l":"playMatch(Competitor, Competitor)","u":"playMatch(competition.Competitor,competition.Competitor)"},{"p":"type","c":"Master","l":"playMatch(Competitor, Competitor)","u":"playMatch(competition.Competitor,competition.Competitor)"},{"p":"type","c":"Tournament","l":"playMatch(Competitor, Competitor)","u":"playMatch(competition.Competitor,competition.Competitor)"},{"p":"match","c":"RandomMatch","l":"RandomMatch()","u":"%3Cinit%3E()"},{"p":"competition","c":"Competition","l":"ranking()"},{"p":"observer","c":"Bookmakers","l":"reactToMatch(Competitor, Competitor)","u":"reactToMatch(competition.Competitor,competition.Competitor)"},{"p":"observer","c":"Journalist","l":"reactToMatch(Competitor, Competitor)","u":"reactToMatch(competition.Competitor,competition.Competitor)"},{"p":"observer","c":"MatchObserver","l":"reactToMatch(Competitor, Competitor)","u":"reactToMatch(competition.Competitor,competition.Competitor)"},{"p":"match","c":"Match","l":"register(MatchObserver)","u":"register(observer.MatchObserver)"},{"p":"competition","c":"Competition","l":"registerr(Collection<MatchObserver>)","u":"registerr(java.util.Collection)"},{"p":"match","c":"Match","l":"registerr(Collection<MatchObserver>)","u":"registerr(java.util.Collection)"},{"p":"strategy","c":"SelectFirstInLeagues","l":"SelectFirstInLeagues()","u":"%3Cinit%3E()"},{"p":"strategy","c":"SelectFstSndInLeagues","l":"SelectFstSndInLeagues()","u":"%3Cinit%3E()"},{"p":"strategy","c":"SelectionStrategy","l":"SelectionStrategy()","u":"%3Cinit%3E()"},{"p":"strategy","c":"SelectLastInLeagues","l":"SelectLastInLeagues()","u":"%3Cinit%3E()"},{"p":"competition","c":"Competition","l":"setObserver(MatchObserver)","u":"setObserver(observer.MatchObserver)"},{"p":"competition","c":"Competitor","l":"setPoints(int)"},{"p":"util","c":"MapUtil","l":"sortByDescendingValue(Map<K, V>)","u":"sortByDescendingValue(java.util.Map)"},{"p":"type","c":"Tournament","l":"Tournament(List<Competitor>, Match)","u":"%3Cinit%3E(java.util.List,match.Match)"},{"p":"match","c":"Match","l":"unRegister(MatchObserver)","u":"unRegister(observer.MatchObserver)"}];updateSearchResults();